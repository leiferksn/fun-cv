name: Powertwin PROD Pipeline (C/Java)  

on:
  push:
    branches: 
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest 

    steps:
    - run: echo ${{github.ref}}
    - uses: actions/checkout@v4

    - name: Build REST Project
      run: | 
        (cd ./powertwin-rest; ./gradlew bootJar; ls -alrt ./libraries; ls -alrt ./build/libs)
      env:
        PKG_ACTOR: ${{ secrets.PKG_ACTOR }}
        PKG_TOKEN: ${{ secrets.PKG_TOKEN }}

    - name: Upload calc artifacts
      uses: actions/upload-artifact@v4
      with: 
        name: c-libs
        path: powertwin-rest/libraries

    - name: Upload REST Artifacts
      uses: actions/upload-artifact@v4
      with: 
        name: rest-lib 
        path: powertwin-rest/build/libs/powertwin-rest-0.0.1-SNAPSHOT.jar

    - name: Rename Json-C Lib
      run: (cp powertwin-c/json-c-bin/lib64/libjson-c.so.5.1.0 powertwin-c/libjson-c.so.5)

    - name: Upload Json-C Artifact
      uses: actions/upload-artifact@v4
      with: 
        name: json-c-lib 
        path: powertwin-c/libjson-c.so.5

  deploy-dockerhub:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest  
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Download Calc Artifacts
      uses: actions/download-artifact@v4
      with:
        name: c-libs
        path: powertwin-rest/libraries/
      
    - name: Download REST Artifacts
      uses: actions/download-artifact@v4
      with:
        name: rest-lib
        path: powertwin-rest/build/libs/

    - name: Download Json-C Artifact
      uses: actions/download-artifact@v4
      with:
        name: json-c-lib
        path: powertwin-rest/libraries/

    - name: Make sure the libs are there
      run: (cd powertwin-rest/build/libs; ls -alrt)

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    
    - name: Set up Docker build
      uses: docker/setup-buildx-action@v3

    - name: Build and push
      uses: docker/build-push-action@v6
      with: 
        context: ./
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/gears:latest
        build-args: |
            pkg_actor=${{ secrets.PKG_ACTOR }}
            pkg_token=${{ secrets.PKG_TOKEN }}
    
#  deploy-heroku:
#    if: github.ref == 'refs/heads/main'
#    needs: build
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Show current directory
#        run: pwd
#
#      - name: Download Calc Artifacts
#        uses: actions/download-artifact@v3
#        with:
#          name: c-libs
#          path: powertwin-rest/lib/
#
#      - name: Download REST Artifacts
#        uses: actions/download-artifact@v3
#        with:
#          name: rest-lib
#          path: powertwin-rest/build/libs/
#
#      - name: Download Json-C Artifact
#        uses: actions/download-artifact@v3
#        with:
#          name: json-c-lib
#          path: powertwin-rest/lib/
#
#      - name: Make sure the libs are there
#        run: (cd powertwin-rest/build/libs; ls -alrt)
#
#      - name: Make sure the libs are there
#        run: (cd powertwin-rest/lib; ls -alrt)
#
#      - name: Deploy Container to Heroku
#        uses: gonuit/heroku-docker-deploy@v1.3.3
#        with:
#          email: ${{ secrets.HEROKU_EMAIL }}
#          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
#          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
#          dockerfile_directory: ./
#          dockerfile_name: Dockerfile
#          process_type: web
